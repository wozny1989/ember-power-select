{"version":3,"file":"trigger.js","sources":["../../../src/components/power-select-multiple/trigger.hbs","../../../src/components/power-select-multiple/trigger.ts"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{!-- template-lint-disable no-invalid-interactive --}}\\n{{!-- template-lint-disable no-pointer-down-event-binding --}}\\n{{!-- template-lint-disable no-unsupported-role-attributes --}}\\n{{!-- template-lint-disable require-aria-activedescendant-tabindex --}}\\n<ul\\n  id=\\\"ember-power-select-multiple-options-{{@select.uniqueId}}\\\"\\n  aria-activedescendant={{if\\n    (and @select.isOpen (not @searchEnabled))\\n    @ariaActiveDescendant\\n  }}\\n  class=\\\"ember-power-select-multiple-options\\\"\\n  {{this.openChange @select.isOpen}}\\n  {{on \\\"touchstart\\\" this.chooseOption}}\\n  {{on \\\"mousedown\\\" this.chooseOption}}\\n  ...attributes\\n>\\n  {{#each @select.selected as |opt idx|}}\\n    <li\\n      class=\\\"ember-power-select-multiple-option\\n        {{if opt.disabled \\'ember-power-select-multiple-option--disabled\\'}}\\\"\\n    >\\n      {{#unless @select.disabled}}\\n        <span\\n          role=\\\"button\\\"\\n          aria-label=\\\"remove element\\\"\\n          class=\\\"ember-power-select-multiple-remove-btn\\\"\\n          data-selected-index={{idx}}\\n        >\\n          &times;\\n        </span>\\n      {{/unless}}\\n      {{#if @selectedItemComponent}}\\n        {{#let (component (ensure-safe-component @selectedItemComponent)) as |SelectedItemComponent|}}\\n          <SelectedItemComponent\\n            @extra={{@extra}}\\n            @option={{opt}}\\n            @select={{@select}}\\n          />\\n        {{/let}}\\n      {{else}}\\n        {{yield opt @select}}\\n      {{/if}}\\n    </li>\\n  {{else}}\\n    {{#if (and @placeholder (not @searchEnabled))}}\\n      <li>\\n        {{#let (component (ensure-safe-component @placeholderComponent)) as |PlaceholderComponent|}}\\n          <PlaceholderComponent\\n            @placeholder={{@placeholder}}\\n          />\\n        {{/let}}\\n      </li>\\n    {{/if}}\\n  {{/each}}\\n  {{#if @searchEnabled}}\\n    <li class=\\\"ember-power-select-trigger-multiple-input-container\\\">\\n      {{#let\\n        (component\\n          \\\"power-select-multiple/input\\\"\\n          select=@select\\n          ariaActiveDescendant=@ariaActiveDescendant\\n          ariaLabelledBy=@ariaLabelledBy\\n          ariaDescribedBy=@ariaDescribedBy\\n          role=@role\\n          ariaLabel=@ariaLabel\\n          listboxId=@listboxId\\n          tabindex=@tabindex\\n          buildSelection=@buildSelection\\n          placeholder=@placeholder\\n          placeholderComponent=@placeholderComponent\\n          searchField=@searchField\\n          onFocus=@onFocus\\n          onBlur=@onBlur\\n          onKeydown=@onKeydown\\n          onInput=@onInput\\n        )\\n        as |InputComponent|\\n      }}\\n        {{#let (component (ensure-safe-component @placeholderComponent)) as |PlaceholderComponent|}}\\n          <PlaceholderComponent\\n            @select={{@select}}\\n            @placeholder={{@placeholder}}\\n            @isMultipleWithSearch={{true}}\\n            @inputComponent={{InputComponent}}\\n            @displayPlaceholder={{and (not @select.searchText) (not @select.selected)}}\\n          />\\n        {{/let}}\\n      {{/let}}\\n    </li>\\n  {{/if}}\\n</ul>\\n<span class=\\\"ember-power-select-status-icon\\\"></span>\")","import Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport { get } from '@ember/object';\nimport { scheduleTask } from 'ember-lifeline';\nimport type { Select } from '../power-select';\nimport type { ComponentLike } from '@glint/template';\nimport { modifier } from 'ember-modifier';\nimport { deprecate } from '@ember/debug';\n\ninterface PowerSelectMultipleTriggerSignature {\n  Element: HTMLElement;\n  Args: {\n    Element: HTMLElement;\n    select: Select;\n    searchEnabled: boolean;\n    placeholder?: string;\n    searchField: string;\n    listboxId?: string;\n    tabindex?: string;\n    ariaLabel?: string;\n    ariaLabelledBy?: string;\n    ariaDescribedBy?: string;\n    role?: string;\n    ariaActiveDescendant: string;\n    extra?: any;\n    placeholderComponent?: string | ComponentLike<any>;\n    selectedItemComponent?: string | ComponentLike<any>;\n    onInput?: (e: InputEvent) => boolean;\n    onKeydown?: (e: KeyboardEvent) => boolean;\n    onFocus?: (e: FocusEvent) => void;\n    onBlur?: (e: FocusEvent) => void;\n    buildSelection: (lastSelection: any, select: Select) => any[];\n  };\n  Blocks: {\n    default: [opt: any, select: Select];\n  };\n}\n\ninterface IndexAccesible<T> {\n  objectAt(index: number): T;\n}\nconst isIndexAccesible = <T>(target: any): target is IndexAccesible<T> => {\n  return typeof target.objectAt === 'function';\n};\n\nexport default class TriggerComponent extends Component<PowerSelectMultipleTriggerSignature> {\n  private _lastIsOpen: boolean = this.args.select.isOpen;\n\n  // Actions\n  @action\n  openChanged(element: Element, [isOpen]: [boolean]) {\n    deprecate(\n      'You are using a power-select-multiple trigger with ember/render-modifier. Replace {{did-update this.openChanged @select.isOpen}} with {{this.openChange @select.isOpen}}.',\n      false,\n      {\n        for: 'ember-power-select',\n        id: 'ember-power-select.no-at-ember-render-modifiers',\n        since: {\n          enabled: '8.1',\n          available: '8.1',\n        },\n        until: '9.0.0',\n      },\n    );\n\n    this._openChanged(element, [isOpen]);\n  }\n\n  @action\n  chooseOption(e: Event) {\n    if (e.target === null) return;\n    const selectedIndex = (e.target as Element).getAttribute(\n      'data-selected-index',\n    );\n    if (selectedIndex) {\n      const numericIndex = parseInt(selectedIndex, 10);\n      e.stopPropagation();\n      e.preventDefault();\n      const object = this.selectedObject(\n        this.args.select.selected,\n        numericIndex,\n      );\n      this.args.select.actions.choose(object);\n    }\n  }\n\n  openChange = modifier((element: Element, [isOpen]: [boolean]) => {\n    this._openChanged(element, [isOpen]);\n  });\n\n  private _openChanged(_el: Element, [isOpen]: [boolean]) {\n    if (isOpen === false && this._lastIsOpen === true) {\n      scheduleTask(this, 'actions', () => {\n        this.args.select.actions?.search('');\n      });\n    }\n    this._lastIsOpen = isOpen;\n  }\n\n  selectedObject<T>(list: IndexAccesible<T> | T[], index: number): T {\n    if (isIndexAccesible(list)) {\n      return list.objectAt(index);\n    } else {\n      return get(list, index) as T;\n    }\n  }\n}\n"],"names":["isIndexAccesible","target","objectAt","TriggerComponent","Component","_lastIsOpen","args","select","isOpen","openChanged","element","deprecate","for","id","since","enabled","available","until","_openChanged","n","prototype","action","chooseOption","e","selectedIndex","getAttribute","numericIndex","parseInt","stopPropagation","preventDefault","object","selectedObject","selected","actions","choose","openChange","modifier","_el","scheduleTask","search","list","index","get","setComponentTemplate","TEMPLATE"],"mappings":"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"}